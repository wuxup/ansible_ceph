---
#- include_tasks: pkg_{{ ansible_os_family | lower }}.yml

- name: Ensure /etc/ceph exists
  tags: add_host    
  file:
    path: /etc/ceph
    state: directory
  become: True

- name: Generate ssh key for cephadm
  tags: add_host    
  openssh_keypair:
    path: "/etc/ceph/cephadm.id"
    size: 4096
    comment: "cephadm"
  become: True
  register: cephadm_ssh_key

- name: Save public key
  tags: add_host    
  copy:
    content: "{{ cephadm_ssh_key.public_key }}"
    dest: /etc/ceph/cephadm.pub
  become: True

- name: Copy cephadm public key to all hosts
  tags: add_host    
  authorized_key:
    user: scadmin
    state: present
    key: "{{ cephadm_ssh_key.public_key }}"
  become: True
  with_inventory_hostnames:
    - deployment
    - ceph-mon
    - ceph-osd
  delegate_to: "{{ item }}"
  become: True

- name: Bootstrap cephadm
  tags: boot_ceph
  run_once: true
  vars:
    mon_ip: "{{ hostvars[inventory_hostname]['ansible_'+api_interface_name].ipv4.address }}"
  command:
    cmd: >
         cephadm bootstrap
         --registry-url "{{ registry }}"
         --registry-username "{{ registry_username }}"
         --registry-password "{{ registry_password }}"
         --ssh-private-key=/etc/ceph/cephadm.id
         --ssh-public-key=/etc/ceph/cephadm.pub
         --log-to-file
         --initial-dashboard-user "{{ dashboard_user }}"
         --initial-dashboard-password "{{ dashboard_pass }}"
         --skip-monitoring-stack 
         --allow-overwrite
         --ssh-user "{{ ssh_user }}"
         --mon-ip "{{ mon_ip }}"
         --config "{{ init_conf }}"
         --cluster-network "{{ cluster_network }}"
  become: True

- name: Get ceph fsid
  tags: 
    - add_host 
    - add_iscsi   
  command: cephadm shell -- ceph fsid
  register: ceph_fsid_output
  become: True

- name: Set ceph_fsid fact
  tags: 
    - add_host
    - add_iscsi    
  set_fact:
    ceph_fsid: "{{ ceph_fsid_output.stdout }}"

- name: Template out cluster spec
  tags: add_host
  template:
    src: templates/cephadm.yml.j2
    dest: "/var/run/ceph/{{ ceph_fsid }}/cluster.yml"
  become: True

- name: Apply cluster spec
  tags: add_host
  command:
    cmd: >
         cephadm shell --
         ceph orch apply -i /var/run/ceph/cluster.yml
  become: True

- name: Add osds
  tags: add_osd
  command:
    cmd: >
         cephadm shell --
         ceph orch daemon add osd {{ item }}
  become: True
  loop: "{{ cephadm_ceph_osd_devices }}"

- name: Wait osd ok
  tags: add_osd
  shell: |
    sleep 10
    cephadm shell -- ceph osd tree
  register: shell_result
  become: True

- name: Show osd
  tags: add_osd
  debug:
    var: shell_result.stdout_lines

- name: osd device class
  tags: set_class
  shell: |
    cephadm shell -- ceph osd crush class ls-osd {{ srcdev_class }}
  register: ls_osd_result  
  become: True

- name: Set osd device class
  tags: set_class
  shell: |
    cephadm shell -- ceph osd crush rm-device-class osd.{{ item }}
    cephadm shell -- ceph osd crush set-device-class {{ device_class }} osd.{{ item }}
  loop: "{{ ls_osd_result.stdout_lines }}"
  become: True

- name: Set crush rule
  tags: set_crush_rule
  shell: |
    cephadm shell -- ceph osd crush rule create-replicated replicated_{{ device_class }} default {{ failure_domain_type }} {{ device_class }}
    cephadm shell -- ceph osd pool set device_health_metrics crush_rule replicated_{{ device_class }}
  become: True

- name: Create and initialise pools for OpenStack services
  tags: set_pool
  shell: |
    cephadm shell -- ceph osd pool create {{ item.key }} {{ item.value }} {{ item.value }} replicated replicated_{{ device_class }} {{ max_size }} {{ min_size }}
    cephadm shell -- ceph osd pool application enable {{ item.key }} rbd
    cephadm shell -- ceph osd pool set {{ item.key }} pg_autoscale_mode off
  with_dict: "{{ cephadm_ceph_pools }}"
  become: true

- name: Create users for OpenStack services
  tags: dump_keyring
  command:
    cmd: >
         cephadm shell --
         ceph auth get-or-create {{ item }}
  become: true
  with_items: "{{ cephadm_ceph_users }}"

- name: Dump ceph keyring
  tags: dump_keyring
  shell: |
     cephadm shell -- ceph auth get-or-create client.{{ item }} > ceph.client.{{ item }}.keyring
  with_items:
    - glance
    - cinder-backup
    - cinder
  become: True

- name: Set ceph mgr config
  shell: |
    cephadm shell -- ceph config set mgr mgr/dashboard/standby_behaviour "error"
    cephadm shell -- ceph config set mgr mgr/dashboard/standby_error_status_code 503
    cephadm shell -- ceph mgr module enable prometheus
    cephadm shell -- ceph mgr module disable dashboard
    cephadm shell -- ceph mgr module enable dashboard
    cephadm shell -- ceph config set mgr mgr/cephadm/device_enhanced_scan true
    cephadm shell -- ceph config set mgr mgr/dashboard/ssl false
    docker ps | grep mgr | awk '{print $1}' | xargs -I {} docker restart {}
    cephadm shell -- ceph mgr module disable dashboard
    cephadm shell -- ceph mgr module enable dashboard
  become: True

- name: Set ceph dashboard config
  shell: |
    echo "{{ dashboard_password }}" > /tmp/passwd.txt
    cephadm shell -- ceph dashboard feature enable rbd
    cephadm shell -- ceph dashboard feature status
    cephadm shell -m /tmp/passwd.txt:/var/run/password.txt -- ceph dashboard set-grafana-api-password -i /var/run/password.txt
    cephadm shell -- ceph dashboard set-grafana-api-url "{{ grafana_api_url }}"
    cephadm shell -- ceph dashboard set-alertmanager-api-host "{{ alertmanager_api_host }}"
    cephadm shell -- ceph dashboard set-prometheus-api-host "{{ prometheus_api_host }}"
    cephadm shell -- ceph dashboard set-grafana-api-ssl-verify false
    cephadm shell -- ceph dashboard set-prometheus-api-ssl-verify false
    cephadm shell -- ceph dashboard set-alertmanager-api-ssl-verify false
  become: True

- name: Get ceph mon
  command: cephadm shell -- ceph-conf --show-config-value mon_host
  register: ceph_mon_output
  become: True

- name: Generate ceph.conf without tabs
  vars:
    ceph_conf_fixed: |
      [global]
      fsid = {{ ceph_fsid }}
      mon_host = {{ ceph_mon_output.stdout }}
  copy:
    content: "{{ ceph_conf_fixed }}"
    dest: /etc/ceph/ceph.conf
  become: True

- name: Check ceph health
  command:
    cmd: cephadm shell -- ceph health detail
  become: True

# Deploy ceph-iscsi
- name: Template out iscsi spec
  tags: add_iscsi
  template:
    src: templates/iscsi.yml.j2
    dest: "/var/run/ceph/{{ ceph_fsid }}/iscsi.yml"
  become: True
  when: enable_ceph_iscsi

- name: Apply iscsi spec
  tags: add_iscsi
  command:
    cmd: >
         cephadm shell --
         ceph orch apply -i /var/run/ceph/iscsi.yml
  become: True
  when: enable_ceph_iscsi
